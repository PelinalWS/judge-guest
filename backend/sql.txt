
delete from contests;
delete from contest_criteria;
delete from projects;

select id from projects where name= 'abc' and contest = 1;
select name, email, role from users order by email asc

select p.id from projects p join contests c on p.contest = c.id where c.access_code = ''
-- DROP TYPE public."role_status";

INSERT INTO votes ("user", contest, project, "comment")
	SELECT
    	u.userid,
    	p.contest AS contest_id,
    	p.id AS project_id,
    	'query trial' AS comment
	FROM
    	users u
	JOIN
    	contests c ON c.access_code = 'ECDB60'
	JOIN
    	projects p ON p.id = 29
	WHERE
    	u.email = 'biscan@havelsan.com.tr';



-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION pg_database_owner;

-- DROP TYPE public."role_status";

CREATE TYPE public."role_status" AS ENUM (
	'null',
	'user',
	'member',
	'admin');

-- DROP SEQUENCE contest_criteria_criteria_id_seq;

CREATE SEQUENCE contest_criteria_criteria_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE contests_id_seq;

CREATE SEQUENCE contests_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE projects_id_seq;

CREATE SEQUENCE projects_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE users_userid_seq;

CREATE SEQUENCE users_userid_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- public.users definition

-- Drop table

-- DROP TABLE users;

CREATE TABLE users (
	userid int4 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar NOT NULL,
	email varchar NOT NULL,
	"password" varchar NOT NULL,
	"role" public."role_status" DEFAULT 'null'::role_status NULL,
	CONSTRAINT users_pk PRIMARY KEY (userid)
);


-- public.contests definition

-- Drop table

-- DROP TABLE contests;

CREATE TABLE contests (
	id int4 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar NOT NULL,
	created_by int4 NOT NULL,
	"date" date NOT NULL,
	description varchar NOT NULL,
	access_code varchar NOT NULL,
	CONSTRAINT contests_pk PRIMARY KEY (id),
	CONSTRAINT contests_users_fk FOREIGN KEY (created_by) REFERENCES users(userid)
);


-- public.projects definition

-- Drop table

-- DROP TABLE projects;

CREATE TABLE projects (
	id int4 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"name" varchar NOT NULL,
	contest int4 NOT NULL,
	points float4 NULL,
	description varchar NULL,
	CONSTRAINT projects_unique UNIQUE (id),
	CONSTRAINT projects_contests_fk FOREIGN KEY (contest) REFERENCES contests(id)
);


-- public.votes definition

-- Drop table

-- DROP TABLE votes;

CREATE TABLE votes (
	"user" int4 NOT NULL,
	contest int4 NOT NULL,
	project int4 NOT NULL,
	"comment" varchar NULL,
	CONSTRAINT votes_contests_fk FOREIGN KEY (contest) REFERENCES contests(id),
	CONSTRAINT votes_projects_fk FOREIGN KEY (project) REFERENCES projects(id),
	CONSTRAINT votes_users_fk FOREIGN KEY ("user") REFERENCES users(userid)
);


-- public.contest_criteria definition

-- Drop table

-- DROP TABLE contest_criteria;

CREATE TABLE contest_criteria (
	contest_id int4 NOT NULL,
	criteria_id int4 GENERATED ALWAYS AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	criteria_name varchar NOT NULL,
	criteria_description varchar NOT NULL,
	coefficient int2 NOT NULL,
	CONSTRAINT contest_criteria_pk PRIMARY KEY (criteria_id),
	CONSTRAINT contest_criteria_contests_fk FOREIGN KEY (contest_id) REFERENCES contests(id)
);


-- public.contest_jury definition

-- Drop table

-- DROP TABLE contest_jury;

CREATE TABLE contest_jury (
	contest_id int4 NOT NULL,
	user_id int4 NOT NULL,
	CONSTRAINT contest_jury_contests_fk FOREIGN KEY (contest_id) REFERENCES contests(id),
	CONSTRAINT contest_jury_users_fk FOREIGN KEY (user_id) REFERENCES users(userid)
);


-- public.project_teams definition

-- Drop table

-- DROP TABLE project_teams;

CREATE TABLE project_teams (
	project int4 NOT NULL,
	"user" int4 NOT NULL,
	CONSTRAINT project_teams_projects_fk FOREIGN KEY (project) REFERENCES projects(id),
	CONSTRAINT project_teams_users_fk FOREIGN KEY ("user") REFERENCES users(userid)
);


-- public.user_criteria_vote definition

-- Drop table

-- DROP TABLE user_criteria_vote;

CREATE TABLE user_criteria_vote (
	userid int4 NOT NULL,
	criteria_id int4 NOT NULL,
	point int2 NULL,
	project_id int4 NOT NULL,
	CONSTRAINT user_criteria_vote_contest_criteria_fk FOREIGN KEY (criteria_id) REFERENCES contest_criteria(criteria_id),
	CONSTRAINT user_criteria_vote_projects_fk FOREIGN KEY (project_id) REFERENCES projects(id),
	CONSTRAINT user_criteria_vote_users_fk FOREIGN KEY (userid) REFERENCES users(userid)
);